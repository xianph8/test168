def supportVersion = "27.1.1"
def rxBindingVersion = "2.2.0@aar"
def rxBindingVersion3 = "3.1.0@aar"
def rxBindingVersion4 = "4.0.0@aar"
def rxLifecycleVersion = "2.2.1"
def retrofitVersion = "2.5.0"
def stethoVersion = "1.5.0"
def butterKnifeVersion = "8.6.0"
def leakCanaryVersion = "1.5.1"
def blockCanaryVersion = "1.5.0"
def dagger2Version = "2.11"
def okHttpVersion = "3.12.1"
def archVersion = "2.2.0"

ext {

    androidConfiguration = [
            compileSdkVersion: 28,
            buildToolsVersion: "28.0.3",
            applicationId    : "com.example.xian",
            minSdkVersion    : 15,
            targetSdkVersion : 28,
            versionCode      : 1,
            versionName      : "1.0.0"
    ]

    supportDependencies = [
            // 官方库
            androidxCore                : 'androidx.core:core:1.3.0',
            androidxCorektx             : 'androidx.core:core-ktx:1.5.0@aar',
            androidxAct                 : 'androidx.activity:activity:1.4.0@aar',
            androidxActktx              : 'androidx.activity:activity-ktx:1.4.0@aar',
            androidxV4                  : 'androidx.legacy:legacy-support-v4:1.0.0',
            androidxAppcompatV7         : 'androidx.appcompat:appcompat:1.1.0',
            androidxCardView            : 'androidx.cardview:cardview:1.0.0',
            androidxRecyclerView        : 'androidx.recyclerview:recyclerview:1.1.0',
            androidxGridLayout          : 'androidx.gridlayout:gridlayout:1.0.0',
            androidxMultidex            : 'androidx.multidex:multidex:2.0.1',
            androidxConstraint          : 'androidx.constraintlayout:constraintlayout:2.0.0-beta6',
            androidxViewPager           : 'androidx.viewpager2:viewpager2:1.0.0',
            androidxDesign              : 'com.google.android.material:material:1.1.0',
            findbugs                    : 'com.google.code.findbugs:jsr305:3.0.2',
            // 测试框架
            testJunit                   : 'junit:junit:4.13',
            testCore                    : 'androidx.test:core:1.3.0-rc01',
            testRunner                  : 'androidx.test:runner:1.3.0-rc01',
            testRules                   : 'androidx.test:rules:1.3.0-rc01',
            testExtJunit                : 'androidx.test.ext:junit:1.1.2-rc01',
            testExtTruth                : 'androidx.test.ext:truth:1.3.0-rc01',
            testEspressoCore            : 'androidx.test.espresso:espresso-core:3.3.0-rc01',
            // leakcanary
            Leakcanarydebug             : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            Leakcanaryrelease           : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            Leakcanarytest              : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            // 图片加载,
            glide                       : "com.github.bumptech.glide:glide:4.11.0",
            glideIntegration            : "com.github.bumptech.glide:okhttp3-integration:4.11.0",
            annotationGlideCompiler     : "com.github.bumptech.glide:compiler:4.11.0",
            fresco                      : "com.facebook.fresco:fresco:1.3.0",
            picasso                     : "com.squareup.picasso:picasso:2.5.2",
            // json解析,
            fastjson                    : "com.alibaba:fastjson:1.2.39",
            fastjsonAndroid             : "com.alibaba:fastjson:1.1.64.android",
            Gson                        : 'com.google.code.gson:gson:2.8.6',
            // dagger,
            dagger2                     : "com.google.dagger:dagger:${dagger2Version}",
            dagger2Compiler             : "com.google.dagger:dagger-compiler:${dagger2Version}",
            // butter knife
            butterknife                 : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterknifeCompiler         : "com.jakewharton:butterknife-compiler:${butterKnifeVersion}",
            // Rx家族，响应式编程,
            rxJava                      : "io.reactivex.rxjava2:rxjava:2.2.19",
            rxAndroid                   : "io.reactivex.rxjava2:rxandroid:2.1.1@aar",
            rxPermissions2              : "com.github.tbruyelle:rxpermissions:0.10.2@aar",
            rxBinding2                  : "com.jakewharton.rxbinding2:rxbinding:${rxBindingVersion}",
            rxBinding3                  : "com.jakewharton.rxbinding3:rxbinding:${rxBindingVersion3}",
            rxBinding4                  : "com.jakewharton.rxbinding4:rxbinding:${rxBindingVersion4}",
            rxBindingSupportV4          : "com.jakewharton.rxbinding2:rxbinding-support-v4:${rxBindingVersion}",
            rxBindingSupportAppcompatV7 : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${rxBindingVersion}",
            rxBindingSupportDesign      : "com.jakewharton.rxbinding2:rxbinding-design:${rxBindingVersion}",
            rxBindingSupportRecyclerView: "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:${rxBindingVersion}",
            rxBindingLeanbackV17        : "com.jakewharton.rxbinding2:rxbinding-leanback-v17:${rxBindingVersion}",

            // 网络请求,
            retrofit                    : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            gsonForRetrofitConverter    : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            rxJavaForRetrofitAdapter    : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}@jar",
            okhttp                      : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okhttpLoggingInterceptor    : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}@jar",
            // facebook出品的网络调试神器,
            stetho                      : "com.facebook.stetho:stetho:${stethoVersion}",
            stethoOkhttp                : "com.facebook.stetho:stetho-okhttp3:${stethoVersion}",
            stethoUrlConnection         : "com.facebook.stetho:stetho-urlconnection:${stethoVersion}",
            stethoJsRhino               : "com.facebook.stetho:stetho-js-rhino:${stethoVersion}",
            // 事件总线
            eventBus                    : 'org.greenrobot:eventbus:3.2.0',
            // other
            statusbarUtils              : 'com.jaeger.statusbaruitl:library:1.3.5',
            MPAndroidChart              : 'com.github.PhilJay:MPAndroidChart:v3.0.2',
            SmartRefreshLayout          : 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2',
            SmartRefreshLayoutHeader    : 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2',
            // bugly
            buglyCrash                  : 'com.tencent.bugly:crashreport:2.6.6',
            buglyCrashUpgrade           : 'com.tencent.bugly:crashreport_upgrade:1.3.5',
            buglyTinker                 : 'com.tencent.bugly:tinker-support:1.1.2',
            // database
            litepal                     : 'org.litepal.android:core:2.0.0',
            // umeng
            umengAnalytics              : 'com.umeng.analytics:analytics:6.1.2',
            // 信鸽
            xg_xinge                    : 'com.tencent.xinge:xinge:3.2.6-release',
            xg_jg                       : 'com.tencent.jg:jg:1.1',
            xg_wup                      : 'com.tencent.wup:wup:1.0.0.E-release',
            xg_mid                      : 'com.tencent.mid:mid:4.0.6-release',

            // Android Architecture Components
            // Lifecycle,ViewModel and LiveData
            archExtensions              : "androidx.lifecycle:lifecycle-extensions:${archVersion}",
            // alternatively - just ViewModel
            archViewModel               : "androidx.lifecycle:viewmodel:${archVersion}", // use -ktx for Kotlin,
            archViewModelKtx            : "androidx.lifecycle:lifecycle-viewmodel-ktx:${archVersion}", // use -ktx for Kotlin,
            // alternatively - just LiveData
            archLiveData                : "androidx.lifecycle:lifecycle-livedata:${archVersion}",
            // alternatively - Lifecycles only (no ViewModel or LiveData).
            // Support library depends on this lightweight import
            archRuntime                 : "androidx.lifecycle:lifecycle-runtime:${archVersion}",
            // alternately - if using Java8, use the following instead of compiler
            archCommonJava8             : "androidx.lifecycle:lifecycle-common-java8:${archVersion}",
            // optional - ReactiveStreams support for LiveData
            archReactiveStreams         : "androidx.lifecycle:lifecycle-reactivestreams:${archVersion}",
            // must annotation processor
            archAnnotationProcessor     : "android.arch.lifecycle:compiler:1.1.1",

            archRoomRuntime             : "androidx.room:room-runtime:2.2.5",
            archRoomRxjava2             : "androidx.room:room-rxjava2:2.2.5",
            archRoomTest                : "androidx.room:room-testing:2.2.5",
            archRoomCompiler            : "androidx.room:room-compiler:2.2.5",
    ]

    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)

    //读取文件
    //def sdkDir = properties.getProperty('key.file')
    //storeFile file( sdkDir )

    //读取字段
    def appversion = properties.getProperty('appversion')
    def appversionname = properties.getProperty('appversionname')

}
